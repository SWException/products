service: products

frameworkVersion: "2"
useDotenv: true

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline-dotenv
  - serverless-offline

custom:
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules:
      forceExclude:
        - aws-sdk
    packager: "npm"
  serverless-offline:
    httpPort: 4000
    ignoreJWTSignature: true
  imageUploadBucket: imagebucket-dev


provider:
  name: aws
  region: eu-central-1
  # profile: swexception
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"
  stage: ${opt:stage, 'dev'}

  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
    restApiId: 95kq9eggu9

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DOMAIN_SUFFIX: eml-be
    CALLBACK_URL: http://localhost:3000
    PRODUCT_IMG_BUCKET: ${self:custom.imageUploadBucket}
    REGION: ${self:provider.region}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - s3:*
          Resource: "*"

resources:
  Resources:
    #bucket for products imgs management
    BucketImage:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: imagebucket-${opt:stage, self:provider.stage}
        AccessControl: PublicRead #!!!public!!!
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: category
            AttributeType: "S"
          - AttributeName: id
            AttributeType: "S"
          - AttributeName: price
            AttributeType: "N"
        KeySchema:
          - AttributeName: category
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: categoryPrice
            KeySchema:
              - AttributeName: category
                KeyType: HASH
              - AttributeName: price
                KeyType: RANGE
            Projection: 
              ProjectionType: "ALL"
        GlobalSecondaryIndexes:
        - IndexName: id-index
          KeySchema:
            - AttributeName: id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST